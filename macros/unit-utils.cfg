#textdomain wesnoth-After_the_Storm

#define UNIT_TO_GLOBAL_STORE _ID _STORE_ID
    [store_unit]
        [filter]
            id={_ID}
        [/filter]
        variable=persist_store
        kill=no
        mode=replace
    [/store_unit]

    {WRITE_VARIABLE_INTO_GLOBAL persist_store {_STORE_ID} NAMESPACE={PERSISTENT_NS_ATS}}

    {CLEAR_VARIABLE persist_store}
#enddef

#define UNIT_FROM_GLOBAL_STORE _STORE_ID
    {READ_GLOBAL_INTO_VARIABLE ({_STORE_ID}) ({_STORE_ID}) NAMESPACE={PERSISTENT_NS_ATS}}
#enddef

#
# Incorporates unit stats from a globally-stored version of the unit into the
# live (on-map) version.
#
# NOTE: This should only be used during prestart and never during regular
#       gameplay events as it also resets the unit's combat stats.
#
#define UPDATE_UNIT_FROM_GLOBAL_STORE _ID _STORE_ID
    {READ_GLOBAL_INTO_VARIABLE ({_STORE_ID}) persist_store NAMESPACE={PERSISTENT_NS_ATS}}

    [if]
        {VARIABLE_ARRAY_NOT_EMPTY persist_store}
        [then]
            {LOG_ATS "Updating "+{_ID}+" from global store"}

            # Verify that the live unit's type matches the stored version.
            # Otherwise force a clean-slate rebuild into the stored unit
            # type.
            [if]
                [have_unit]
                    id={_ID}
                    type=$persist_store.type
                [/have_unit]
                [else]
                    {LOG_ATS "Rebuilding unit for "+{_ID}+" to new unit type '$persist_store.type'"}

                    {TRANSFORM_UNIT (id={_ID}) $persist_store.type}
                [/else]
            [/if]

            # Reapply AMLAs as needed.
            [if]
                {VARIABLE_ARRAY_NOT_EMPTY persist_store.modifications.advancement}
                [then]
                    {LOG_ATS "Applying $persist_store.modifications.advancement.length stored AMLAs to "+{_ID}}

                    [apply_amlas]
                        id={_ID}
                        [insert_tag]
                            name="advancement"
                            variable="persist_store.modifications.advancement"
                        [/insert_tag]
                    [/apply_amlas]
                [/then]
            [/if]

            # Reapply objects that have a description (so we can safely assume
            # they are not objects used for internal purposes).
            [if]
                {VARIABLE_ARRAY_NOT_EMPTY persist_store.modifications.object}
                [then]
                    {LOG_ATS "Applying $persist_store.modifications.object.length stored [object]s to "+{_ID}}

                    [apply_objects]
                        id={_ID}
                        [insert_tag]
                            name="object"
                            variable="persist_store.modifications.object"
                        [/insert_tag]
                    [/apply_objects]
                [/then]
            [/if]

            # Reset combat stats and record its old XP ratio for usage by AMLA_XP_CAP.
            [modify_unit]
                [filter]
                    id={_ID}
                [/filter]
                moves=$persist_store.max_moves
                attacks_left=$persist_store.max_attacks
                [variables]
                    amla_xp_cap_old_ratio="$(1.0*$persist_store.experience / $persist_store.max_experience)"
                [/variables]
            [/modify_unit]

            {LOG_ATS "Unit update from global store finished"}
        [/then]
    [/if]

    {CLEAR_VARIABLE persist_store}
#enddef

#define INJURED_VARIATION_STATS
    hitpoints=1
    max_hitpoints=1
    experience=0
    max_experience=0
    moves=0
    max_attacks=0
    attacks_left=0
#enddef

#define APPLY_INJURED_VARIATION _SUF _FACING
    [object]
        [filter]
            {_SUF}
        [/filter]
        [effect]
            apply_to=variation
            name=injured
        [/effect]
        silent=yes
    [/object]

    [modify_unit]
        [filter]
            {_SUF}
        [/filter]
        {INJURED_VARIATION_STATS}
        facing={_FACING}
        [status]
            slowed=no
            poisoned=no
            petrified=no
            unhealable=no
        [/status]
    [/modify_unit]
#enddef

# Needed in scenario events for E2S4
#define UNDEAD_RECRUITMENT:ZYNARA:LIMIT
    {DIFF 8 6 4} #enddef

#define UNDEAD_RECRUITMENT:ZYNARA:WILD_GHOSTS_SIDE _SIDE_NUM
    [event]
        name=prestart

        # NOTE: The variable name is hardcoded in the implementation of the
        #       [player_ghost_trap] WML action.
        {VARIABLE wild_ghosts_side {_SIDE_NUM}}
    [/event]

    [event]
        name=victory

        {CLEAR_VARIABLE wild_ghosts_side}
    [/event]
#enddef

#define UNDEAD_RECRUITMENT:ZYNARA
    [event]
        id=ur_zynara_precruit
        name=prerecruit
        first_time_only=no
        [filter]
            side=1
            type=Ghost,Wraith,Spectre,Shadow,Nightgaunt
        [/filter]
        [filter_condition]
            [have_unit]
                id=Zynara
                side=1
            [/have_unit]
        [/filter_condition]

        {VARIABLE player_ghost_limit {UNDEAD_RECRUITMENT:ZYNARA:LIMIT}}

        [if]
            [player_ghost_limit_reached]
                variable="player_ghost_count"
                limit="$player_ghost_limit"
            [/player_ghost_limit_reached]

            [then]
                [message]
                    speaker=Zynara
                    message= _ "My lady, no! I cannot keep that many spirits under control!"
                [/message]

                [transient_message]
                    message= _ "You are no longer able to recruit Ghosts for the remainder of this scenario."
                [/transient_message]

                [disallow_recruit]
                    side=1
                    type=Ghost
                [/disallow_recruit]

                [event]
                    name=victory

                    [allow_recruit]
                        side=1
                        type=Ghost
                    [/allow_recruit]
                [/event]

                [player_ghost_trap][/player_ghost_trap]
            [/then]

            [else]
                {VARIABLE_MINUS player_ghost_limit $player_ghost_count}

                [switch]
                    variable="player_ghost_limit"

                    [case]
                        value=3
                        [message]
                            speaker=Zynara
                            message= _ "My lady, I can summon up to three more spirits."
                        [/message]
                    [/case]

                    [case]
                        value=2
                        [message]
                            speaker=Zynara
                            message= _ "I can summon two more spirits."
                        [/message]
                    [/case]

                    [case]
                        value=1
                        [message]
                            speaker=Zynara
                            message= _ "I can only summon one more spirit!"
                        [/message]
                    [/case]

                    [case]
                        value=0
                        [message]
                            speaker=Zynara
                            message= _ "My lady, I will not be able to control additional spirits unless we get rid of some of the ones we already have at our command."
                        [/message]
                    [/case]
                [/switch]

                [allow_undo][/allow_undo]
            [/else]
        [/if]

        {CLEAR_VARIABLE player_ghost_count,player_ghost_limit}
    [/event]
#enddef

#define UNDEAD_RECRUITMENT:IRYLEAN
    [event]
        id=ur_irylean_prerecruit
        name=prerecruit
        first_time_only=no
        [filter]
            side=1
            type=Walking Corpse
        [/filter]
        [filter_condition]
            [have_unit]
                side=1
                id=Irylean
            [/have_unit]
        [/filter_condition]

        {VARIABLE_RANDOM temp_URI_variation gryphon,wolf,bat}

        [object]
            silent=yes
            [filter]
                x,y=$x1,$y1
            [/filter]
            [effect]
                apply_to=variation
                name=$temp_URI_variation
            [/effect]
        [/object]

        [heal_unit]
            [filter]
                x,y=$x1,$y1
            [/filter]
            restore_statuses=no
        [/heal_unit]

        {CLEAR_VARIABLE temp_URI_variation}
    [/event]
#enddef

#
# Disallow a unit (slave) from moving when it gets away from another unit's
# (master) movement range.
#
# 1. We set the slave's remaining MP to 0 on each turn refresh unless it is
#    within range of its master.
#
# 2. We set the slave's remaining MP to 0 on moveto whenever it leaves its
#    master's range. We don't care how far away from its master's range it can
#    move. This can happen because of either the master or the slave moving.
#
# 3. On each case above, we store the slave's previous remaining MP in a unit
#    variable so we can restore them once the master moves so that the slave
#    is within his movement range again.
#
# 4. Handling the master or the slave's death is left as an exercise to the
#    reader.
#
# 5. Handling masters and slaves who do not belong to the same side is also
#    left as an exercise to the reader.
#
# 6. Allowing this macro to be used multiple times in a scenario is also left
#    as an exercise to the reader.
#
# Also note that this macro could be alternatively called SLAVE_UNIT. Not that
# there's anything wrong with that.(tm)
#
#define BIND_UNIT_TO_UNIT_MOVEMENT_RANGE _MASTER_SUF _SLAVE_SUF
    [event]
        id=bind_uu_immobilize_helper_eh # (3a)
        name=immobilize bound unit
        first_time_only=no

        {LOG_ATS_DBG "UU: $unit.id has been immobilized ($unit.moves| MP)"}

        {VARIABLE unit.variables.uu_moves $unit.moves}

        # Default attribute values since the 1.9.0 config optimizations are
        # undocumented and thus unreliable, so set an explicit flag to check
        # for.
        {VARIABLE unit.variables.uu_immobilized yes}

        {VARIABLE unit.moves 0}

        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]

        [redraw]
            side=$unit.side
        [/redraw]
    [/event]

    [event]
        id=bind_uu_mobilize_helper_eh # (3b)
        name=mobilize bound unit
        first_time_only=no

        {LOG_ATS_DBG "UU: $unit.id has been mobilized ($unit.variables.uu_moves| MP)"}

        {VARIABLE unit.moves $unit.variables.uu_moves}

        {CLEAR_VARIABLE unit.variables.uu_moves,unit.variables.uu_immobilized}

        [unstore_unit]
            variable=unit
            find_vacant=no
        [/unstore_unit]

        [redraw]
            side=$unit.side
        [/redraw]
    [/event]

    [event]
        id=bind_uu_turn_refresh_eh # (1)
        name=turn refresh
        first_time_only=no
        [filter_side]
            [has_unit]
                {_SLAVE_SUF}
                [or]
                    {_MASTER_SUF}
                [/or]
            [/has_unit]
        [/filter_side]

        {LOG_ATS_DBG "UU: in turn refresh handler"}

        [check_unit_in_range]
            [filter]
                {_MASTER_SUF}
            [/filter]
            [filter_second]
                {_SLAVE_SUF}
            [/filter_second]
            variable=temp_bind_uu_in_range
        [/check_unit_in_range]

        [if]
            {VARIABLE_BOOLEAN_EQUALS temp_bind_uu_in_range no}
            [then]
                [fire_event]
                    name=immobilize bound unit
                    [primary_unit]
                        {_SLAVE_SUF}
                    [/primary_unit]
                [/fire_event]
            [/then]
            [else]
                [store_unit]
                    [filter]
                        {_SLAVE_SUF}
                    [/filter]
                    variable=temp_bind_uu_slave
                [/store_unit]

                # We only need to clear state here, since the game's internal
                # pre-turn refresh logic already reset the unit's MP.
                {CLEAR_VARIABLE temp_bind_uu_slave.variables.uu_moves,temp_bind_uu_slave.variables.uu_immobilized}

                [unstore_unit]
                    variable=temp_bind_uu_slave
                    find_vacant=no
                [/unstore_unit]

                {CLEAR_VARIABLE temp_bind_uu_slave}
            [/else]
        [/if]

        {CLEAR_VARIABLE temp_bind_uu_in_range}
    [/event]

    [event]
        id=bind_uu_moveto_eh # (2)
        name=moveto
        first_time_only=no
        [filter]
            {_SLAVE_SUF}
            [or]
                {_MASTER_SUF}
            [/or]
        [/filter]

        {LOG_ATS_DBG "UU: in moveto handler"}

        [check_unit_in_range]
            [filter]
                {_MASTER_SUF}
            [/filter]
            [filter_second]
                {_SLAVE_SUF}
            [/filter_second]
            variable=temp_bind_uu_in_range
        [/check_unit_in_range]

        [if]
            {VARIABLE_BOOLEAN_EQUALS temp_bind_uu_in_range no}
            [then] # Not within master's range.
                [if]
                    [have_unit]
                        {_SLAVE_SUF}
                        [not]
                            [filter_wml]
                                [variables]
                                    uu_immobilized=yes
                                [/variables]
                            [/filter_wml]
                        [/not]
                    [/have_unit]
                    [then]
                        # Wasn't immobilized before, needs to be immobilized now.
                        [fire_event]
                            name=immobilize bound unit
                            [primary_unit]
                                {_SLAVE_SUF}
                            [/primary_unit]
                        [/fire_event]
                    [/then]
                    [else]
                        # Slave state won't be changed by this move, allow
                        # undoing.
                        [allow_undo][/allow_undo]
                    [/else]
                [/if]
            [/then]
            [else] # Now within master's range.
                [if]
                    [have_unit]
                        {_SLAVE_SUF}
                        [filter_wml]
                            [variables]
                                uu_immobilized=yes
                            [/variables]
                        [/filter_wml]
                    [/have_unit]
                    [then]
                        # Was immobilized before, restore MP and clear state.
                        [fire_event]
                            name=mobilize bound unit
                            [primary_unit]
                                {_SLAVE_SUF}
                            [/primary_unit]
                        [/fire_event]
                    [/then]
                    [else]
                        # Slave state won't be changed by this move, allow
                        # undoing.
                        [allow_undo][/allow_undo]
                    [/else]
                [/if]
            [/else]
        [/if]

        {CLEAR_VARIABLE temp_bind_uu_in_range}
    [/event]
#enddef

#define FORCE_MOBILIZE_BOUND_UNIT _SLAVE_SUF
    [if]
        [have_unit]
            {_SLAVE_SUF}
            [filter_wml]
                [variables]
                    uu_immobilized=yes
                [/variables]
            [/filter_wml]
        [/have_unit]
        [then]
            [fire_event]
                name=mobilize bound unit
                [primary_unit]
                    {_SLAVE_SUF}
                [/primary_unit]
            [/fire_event]
        [/then]
    [/if]
#enddef

#define DISABLE_BOUND_UNITS
    # First, mobilize any applicable still bound units.

    [store_unit]
        [filter]
            [filter_wml]
                [variables]
                    uu_immobilized=yes
                [/variables]
            [/filter_wml]
        [/filter]
        variable=temp_uuu_immobilized_units
        kill=no
    [/store_unit]

    [foreach]
        array=temp_uuu_immobilized_units
        [do]
            [fire_event]
                name=mobilize bound unit
                [primary_unit]
                    x,y=$this_item.x,$this_item.y
                [/primary_unit]
            [/fire_event]
        [/do]
    [/foreach]

    {CLEAR_VARIABLE temp_uuu_immobilized_units}

    # With that out of the way, we can eliminate all the event handlers
    # previously involved.

    [remove_event]
        id=bind_uu_immobilize_helper_eh,bind_uu_mobilize_helper_eh,bind_uu_turn_refresh_eh,bind_uu_moveto_eh # wmllint: ignore
    [/remove_event]
#enddef

#define FIRE_GUARDIAN_SUMMONING
    [event]
        name=prestart

        {ENABLE_FIRE_GUARDIAN_SUMMONING}
    [/event]

    [event]
        name=victory

        {DISABLE_FIRE_GUARDIAN_SUMMONING}
    [/event]
#enddef

#define ENABLE_FIRE_GUARDIAN_SUMMONING
    [set_menu_item]
        id=wmi_summon_fire_guardian
        # po: The Fire Guardian unit type name translation may be found in the
        # po: wesnoth-units textdomain in mainline.
        description= _ "Summon Fire Guardian"
        image="icons/menu-fire.png"
        [show_if]
            # Only during the player's turn
            {VARIABLE_NUMERICAL_EQUALS side_number 1}
        [/show_if]
        [filter_location]
            [not]
                # Vacant hexes...
                [filter][/filter]
            [/not]
            # ... adjacent to Elyssa while she is under the player's control...
            [filter_adjacent_location]
                [filter]
                    side=1
                    id=Elyssa
                    # ... or to Elynia in E3S10
                    [or]
                        side=1
                        id=Elynia
                        [filter_wml]
                            [variables]
                                is_summoning_target=yes
                            [/variables]
                        [/filter_wml]
                    [/or]
                [/filter]
            [/filter_adjacent_location]
        [/filter_location]
        [command]
            [if]
                [have_location]
                    x,y=$x1,$y1
                    # ... that aren't impassable.
                    terrain=X*,*^X*
                    [not]
                        terrain=*^Xp # FIXME: *^X conflicts with Dark Hive holes, they should be replaced!
                    [/not]
                [/have_location]
                [then]
                    [transient_message]
                        message= _ "You cannot summon a Fire Guardian on an impassable location!"
                    [/transient_message]
                [/then]
                [else]
                    [if]
                        [have_unit]
                            side=1
                            type=Fire Guardian
                            count="6-99999"
                        [/have_unit]
                        [then]
                            [transient_message]
                                message= _ "You cannot control more than six Fire Guardians at once!"
                            [/transient_message]
                        [/then]
                        [else]
                            [store_direction]
                                [from]
                                    [filter]
                                        id=Elyssa
                                    [/filter]
                                [/from]
                                to_x,to_y=$x1,$y1
                                variable=temp_FIRE_GUARDIAN_facing
                            [/store_direction]

                            [unit]
                                side=1
                                type=Fire Guardian
                                level=3
                                x,y=$x1,$y1
                                moves,attacks_left=0,0
                                random_gender=yes
                                random_traits=yes
                                generate_name=yes
                                animate=yes
                                upkeep=free
                                {IS_LOYAL}
                                facing=$temp_FIRE_GUARDIAN_facing
                                [modifications]
                                    {TRAIT_LOYAL_NO_OVERLAY}
                                    [object]
                                        silent=yes
                                        [effect]
                                            apply_to=hitpoints
                                            heal_full=yes
                                            increase_total={DIFF 32 30 25}
                                        [/effect]
                                        [effect]
                                            apply_to=attack
                                            range=melee
                                            increase_damage=2
                                        [/effect]
                                        [effect]
                                            apply_to=attack
                                            range=ranged
                                            increase_damage=4
                                            increase_attacks=2
                                            [set_specials]
                                                {WEAPON_SPECIAL_MARKSMAN}
                                            [/set_specials]
                                        [/effect]
                                        [effect]
                                            apply_to=new_ability
                                            [abilities]
                                                {ABILITY_REGENERATES}
                                            [/abilities]
                                        [/effect]
                                    [/object]
                                [/modifications]
                            [/unit]

                            {CLEAR_VARIABLE temp_FIRE_GUARDIAN_facing}
                        [/else]
                    [/if]
                [/else]
            [/if]
        [/command]
    [/set_menu_item]
#enddef

#define DISABLE_FIRE_GUARDIAN_SUMMONING
    [kill]
        type=Fire Guardian
        side=1
    [/kill]

    {REMOVE_MENU_ITEM wmi_summon_fire_guardian}
#enddef

# kate: indent-mode normal; encoding utf-8; space-indent on;
